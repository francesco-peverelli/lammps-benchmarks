LAMMPS (7 Jan 2022)
  using 1 OpenMP thread(s) per MPI task
Lattice spacing in x,y,z = 3.615 3.615 3.615
Created orthogonal box = (0 0 0) to (216.9 216.9 216.9)
  3 by 4 by 4 MPI processor grid
Created 864000 atoms
  using lattice units in orthogonal box = (0 0 0) to (216.9 216.9 216.9)
  create_atoms CPU = 0.007 seconds
Reading eam potential file Cu_u3.eam with DATE: 2007-06-11

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:
- GPU package (short-range, long-range and three-body potentials):
The log file lists these citations in BibTeX format.

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE


--------------------------------------------------------------------------
- Using acceleration for eam:
-  with 6 proc(s) per device.
-  Horizontal vector operations: ENABLED
-  Shared memory system: No
--------------------------------------------------------------------------
Device 0: Tesla V100-SXM2-16GB, 80 CUs, 14/16 GB, 1.5 GHZ (Single Precision)
Device 1: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Single Precision)
Device 2: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Single Precision)
Device 3: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Single Precision)
Device 4: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Single Precision)
Device 5: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Single Precision)
Device 6: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Single Precision)
Device 7: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Single Precision)
--------------------------------------------------------------------------

Initializing Device and compiling on process 0...Done.
Initializing Devices 0-7 on core 0...Done.
Initializing Devices 0-7 on core 1...Done.
Initializing Devices 0-7 on core 2...Done.
Initializing Devices 0-7 on core 3...Done.
Initializing Devices 0-7 on core 4...Done.
Initializing Devices 0-7 on core 5...Done.

Setting up Verlet run ...
  Unit style    : metal
  Current step  : 0
  Time step     : 0.005
Per MPI rank memory allocation (min/avg/max) = 6.187 | 6.187 | 6.187 Mbytes
Step Temp E_pair E_mol TotEng Press 
       0         1600   -3058559.9            0   -2879870.9    18704.312 
      50    780.51289   -2966447.6            0   -2879279.4    52309.346 
     100    798.57098     -2968477            0     -2879292    51460.499 
Loop time of 0.439718 on 48 procs for 100 steps with 864000 atoms

Performance: 98.245 ns/day, 0.244 hours/ns, 227.418 timesteps/s
96.5% CPU use with 48 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.25305    | 0.25971    | 0.27578    |   0.9 | 59.06
Neigh   | 0.0028002  | 0.0030388  | 0.0032465  |   0.2 |  0.69
Comm    | 0.10858    | 0.11707    | 0.12246    |   0.9 | 26.62
Output  | 0.00073827 | 0.0017246  | 0.002795   |   1.3 |  0.39
Modify  | 0.016702   | 0.017563   | 0.019813   |   0.4 |  3.99
Other   |            | 0.04062    |            |       |  9.24

Nlocal:          18000 ave       18165 max       17864 min
Histogram: 1 3 8 8 10 9 2 4 2 1
Nghost:        14170.2 ave       14306 max       14006 min
Histogram: 1 1 5 2 9 8 10 8 3 1
Neighs:              0 ave           0 max           0 min
Histogram: 48 0 0 0 0 0 0 0 0 0

Total # of neighbors = 0
Ave neighs/atom = 0
Neighbor list builds = 15
Dangerous builds = 0


---------------------------------------------------------------------
      Device Time Info (average): 
---------------------------------------------------------------------
Data Transfer:   0.0646 s.
Neighbor copy:   0.0013 s.
Neighbor build:  0.0101 s.
Force calc:      0.0789 s.
Device Overhead: 0.0789 s.
Average split:   1.0000.
Lanes / atom:    4.
Vector width:    32.
Max Mem / Proc:  14.64 MB.
CPU Neighbor:    0.0502 s.
CPU Cast/Pack:   0.0386 s.
CPU Driver_Time: 0.0071 s.
CPU Idle_Time:   0.0204 s.
---------------------------------------------------------------------

Total wall time: 0:01:02
Intel(R) VTune(TM) Profiler 2022.2.0 collection completed successfully. Use the "aps --report /home/ubuntu/lammps/bench/aps_result_20220609" command to generate textual and HTML reports for the profiling session.
