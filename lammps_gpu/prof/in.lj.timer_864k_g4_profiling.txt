LAMMPS (7 Jan 2022)
  using 1 OpenMP thread(s) per MPI task
New timer settings: style=full  mode=sync  timeout=off
Lattice spacing in x,y,z = 1.6795962 1.6795962 1.6795962
Created orthogonal box = (0 0 0) to (100.77577 100.77577 100.77577)
  3 by 3 by 4 MPI processor grid
Created 864000 atoms
  using lattice units in orthogonal box = (0 0 0) to (100.77577 100.77577 100.77577)
  create_atoms CPU = 0.006 seconds

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:
- GPU package (short-range, long-range and three-body potentials):
The log file lists these citations in BibTeX format.

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE


--------------------------------------------------------------------------
- Using acceleration for lj/cut:
-  with 9 proc(s) per device.
-  Horizontal vector operations: ENABLED
-  Shared memory system: No
--------------------------------------------------------------------------
Device 0: Tesla V100-SXM2-16GB, 80 CUs, 13/16 GB, 1.5 GHZ (Mixed Precision)
Device 1: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Mixed Precision)
Device 2: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Mixed Precision)
Device 3: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Mixed Precision)
--------------------------------------------------------------------------

Initializing Device and compiling on process 0...Done.
Initializing Devices 0-3 on core 0...Done.
Initializing Devices 0-3 on core 1...Done.
Initializing Devices 0-3 on core 2...Done.
Initializing Devices 0-3 on core 3...Done.
Initializing Devices 0-3 on core 4...Done.
Initializing Devices 0-3 on core 5...Done.
Initializing Devices 0-3 on core 6...Done.
Initializing Devices 0-3 on core 7...Done.
Initializing Devices 0-3 on core 8...Done.

  generated 0 of 0 mixed pair_coeff terms from geometric mixing rule
Setting up Verlet run ...
  Unit style    : lj
  Current step  : 0
  Time step     : 0.005
Per MPI rank memory allocation (min/avg/max) = 7.441 | 7.441 | 7.441 Mbytes
Step Temp E_pair E_mol TotEng Press 
       0         1.44   -6.7733675            0     -4.61337   -5.0196713 
   10000   0.69749427   -5.6674506            0   -4.6212104    0.7458333 
Loop time of 50.7781 on 36 procs for 10000 steps with 864000 atoms

Performance: 85075.968 tau/day, 196.935 timesteps/s
98.7% CPU use with 36 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg|  %CPU | %total
-----------------------------------------------------------------------
Pair    | 24.872     | 26.751     | 29.966     |  27.4 |  98.9 | 52.68
Neigh   | 0.00078535 | 0.00087781 | 0.00099894 |   0.0 | 100.0 |  0.00
Comm    | 6.4568     | 6.8881     | 7.2074     |   8.3 |  98.3 | 13.57
Output  | 0.00026388 | 0.00026515 | 0.00029134 |   0.0 | 100.0 |  0.00
Modify  | 2.7432     | 2.9352     | 3.1324     |   9.4 |  98.3 |  5.78
Sync    | 9.5384     | 12.994     | 14.585     |  30.7 |  98.6 | 25.59
Other   |            | 14.2       |            |       |       | 27.97

Nlocal:          24000 ave       24074 max       23878 min
Histogram: 1 0 1 0 8 8 7 6 1 4
Nghost:        15925.6 ave       16011 max       15848 min
Histogram: 1 0 4 10 7 5 5 2 1 1
Neighs:              0 ave           0 max           0 min
Histogram: 36 0 0 0 0 0 0 0 0 0

Total # of neighbors = 0
Ave neighs/atom = 0
Neighbor list builds = 500
Dangerous builds not checked


---------------------------------------------------------------------
      Device Time Info (average): 
---------------------------------------------------------------------
Data Transfer:   13.5124 s.
Neighbor copy:   0.0413 s.
Neighbor build:  0.6143 s.
Force calc:      8.5593 s.
Device Overhead: 9.6618 s.
Average split:   1.0000.
Lanes / atom:    4.
Vector width:    32.
Max Mem / Proc:  20.41 MB.
CPU Neighbor:    0.7291 s.
CPU Cast/Pack:   4.3639 s.
CPU Driver_Time: 0.2172 s.
CPU Idle_Time:   20.3117 s.
---------------------------------------------------------------------

Total wall time: 0:01:11
Intel(R) VTune(TM) Profiler 2022.1.0 collection completed successfully. Use the "aps --report /home/ubuntu/lammps/bench/aps_result_20220414" command to generate textual and HTML reports for the profiling session.
