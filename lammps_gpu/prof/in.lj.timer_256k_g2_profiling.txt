LAMMPS (7 Jan 2022)
  using 1 OpenMP thread(s) per MPI task
New timer settings: style=full  mode=nosync  timeout=off
Lattice spacing in x,y,z = 1.6795962 1.6795962 1.6795962
Created orthogonal box = (0 0 0) to (67.183848 67.183848 67.183848)
  7 by 2 by 2 MPI processor grid
Created 256000 atoms
  using lattice units in orthogonal box = (0 0 0) to (67.183848 67.183848 67.183848)
  create_atoms CPU = 0.003 seconds

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:
- GPU package (short-range, long-range and three-body potentials):
The log file lists these citations in BibTeX format.

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE


--------------------------------------------------------------------------
- Using acceleration for lj/cut:
-  with 14 proc(s) per device.
-  Horizontal vector operations: ENABLED
-  Shared memory system: No
--------------------------------------------------------------------------
Device 0: Tesla V100-SXM2-16GB, 80 CUs, 12/16 GB, 1.5 GHZ (Mixed Precision)
Device 1: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Mixed Precision)
--------------------------------------------------------------------------

Initializing Device and compiling on process 0...Done.
Initializing Devices 0-1 on core 0...Done.
Initializing Devices 0-1 on core 1...Done.
Initializing Devices 0-1 on core 2...Done.
Initializing Devices 0-1 on core 3...Done.
Initializing Devices 0-1 on core 4...Done.
Initializing Devices 0-1 on core 5...Done.
Initializing Devices 0-1 on core 6...Done.
Initializing Devices 0-1 on core 7...Done.
Initializing Devices 0-1 on core 8...Done.
Initializing Devices 0-1 on core 9...Done.
Initializing Devices 0-1 on core 10...Done.
Initializing Devices 0-1 on core 11...Done.
Initializing Devices 0-1 on core 12...Done.
Initializing Devices 0-1 on core 13...Done.

  generated 0 of 0 mixed pair_coeff terms from geometric mixing rule
Setting up Verlet run ...
  Unit style    : lj
  Current step  : 0
  Time step     : 0.005
Per MPI rank memory allocation (min/avg/max) = 4.564 | 4.622 | 4.638 Mbytes
Step Temp E_pair E_mol TotEng Press 
       0         1.44   -6.7733683            0   -4.6133768   -5.0196737 
     100   0.75865617    -5.760326            0   -4.6223462   0.19586079 
Loop time of 0.243044 on 28 procs for 100 steps with 256000 atoms

Performance: 177745.888 tau/day, 411.449 timesteps/s
84.8% CPU use with 28 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg|  %CPU | %total
-----------------------------------------------------------------------
Pair    | 0.036364   | 0.077594   | 0.1365     |  12.1 |  88.5 | 31.93
Neigh   | 6.423e-06  | 7.6104e-06 | 1.142e-05  |   0.0 | 100.0 |  0.00
Comm    | 0.091591   | 0.15585    | 0.19673    |   8.6 |  83.1 | 64.12
Output  | 8.9479e-05 | 0.0014598  | 0.0028774  |   1.9 |  97.1 |  0.60
Modify  | 0.0036787  | 0.0044059  | 0.0064557  |   0.8 |  85.0 |  1.81
Other   |            | 0.003724   |            |       |       |  1.53

Nlocal:        9142.86 ave        9407 max        8897 min
Histogram: 4 8 0 0 1 4 3 0 1 7
Nghost:        10771.9 ave       11169 max       10416 min
Histogram: 8 0 1 6 1 0 0 6 2 4
Neighs:              0 ave           0 max           0 min
Histogram: 28 0 0 0 0 0 0 0 0 0

Total # of neighbors = 0
Ave neighs/atom = 0
Neighbor list builds = 5
Dangerous builds not checked


---------------------------------------------------------------------
      Device Time Info (average): 
---------------------------------------------------------------------
Data Transfer:   0.0238 s.
Neighbor copy:   0.0002 s.
Neighbor build:  0.0075 s.
Force calc:      0.0519 s.
Device Overhead: 0.1506 s.
Average split:   1.0000.
Lanes / atom:    4.
Vector width:    32.
Max Mem / Proc:  8.24 MB.
CPU Neighbor:    0.0159 s.
CPU Cast/Pack:   0.0149 s.
CPU Driver_Time: 0.0027 s.
CPU Idle_Time:   0.0520 s.
---------------------------------------------------------------------

Total wall time: 0:00:16
Intel(R) VTune(TM) Profiler 2022.2.0 collection completed successfully. Use the "aps --report /home/ubuntu/lammps/bench/aps_result_20220420" command to generate textual and HTML reports for the profiling session.
