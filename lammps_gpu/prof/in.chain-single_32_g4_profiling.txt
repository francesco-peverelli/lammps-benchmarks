LAMMPS (7 Jan 2022)
  using 1 OpenMP thread(s) per MPI task
Reading data file ...
  orthogonal box = (-16.796 -16.796 -16.796) to (16.796 16.796 16.796)
  2 by 2 by 3 MPI processor grid
  reading atoms ...
  32000 atoms
  reading velocities ...
  32000 velocities
  scanning bonds ...
  1 = max bonds/atom
  reading bonds ...
  31680 bonds
Finding 1-2 1-3 1-4 neighbors ...
  special bond factors lj:    0        1        1       
  special bond factors coul:  0        1        1       
     2 = max # of 1-2 neighbors
     2 = max # of special neighbors
  special bonds CPU = 0.002 seconds
  read_data CPU = 0.193 seconds

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:
- GPU package (short-range, long-range and three-body potentials):
The log file lists these citations in BibTeX format.

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE


--------------------------------------------------------------------------
- Using acceleration for lj/cut:
-  with 3 proc(s) per device.
-  Horizontal vector operations: ENABLED
-  Shared memory system: No
--------------------------------------------------------------------------
Device 0: Tesla V100-SXM2-16GB, 80 CUs, 15/16 GB, 1.5 GHZ (Single Precision)
Device 1: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Single Precision)
Device 2: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Single Precision)
Device 3: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Single Precision)
--------------------------------------------------------------------------

Initializing Device and compiling on process 0...Done.
Initializing Devices 0-3 on core 0...Done.
Initializing Devices 0-3 on core 1...Done.
Initializing Devices 0-3 on core 2...Done.

  generated 0 of 0 mixed pair_coeff terms from geometric mixing rule
Setting up Verlet run ...
  Unit style    : lj
  Current step  : 0
  Time step     : 0.012
WARNING: Communication cutoff 1.52 is shorter than a bond length based estimate of 1.855. This may lead to errors. (../comm.cpp:723)
Per MPI rank memory allocation (min/avg/max) = 3.892 | 3.893 | 3.894 Mbytes
Step Temp E_pair E_mol TotEng Press 
       0   0.97029772   0.44484087    20.494523    22.394765    4.6721833 
     100   0.96991756   0.43771245    20.506862    22.399406    4.6968324 
Loop time of 0.134101 on 12 procs for 100 steps with 32000 atoms

Performance: 773146.767 tau/day, 745.705 timesteps/s
99.1% CPU use with 12 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.04215    | 0.050182   | 0.060007   |   2.5 | 37.42
Bond    | 0.0088474  | 0.0092445  | 0.0099248  |   0.3 |  6.89
Neigh   | 0.0022351  | 0.0023425  | 0.0023915  |   0.1 |  1.75
Comm    | 0.020891   | 0.025909   | 0.030387   |   1.6 | 19.32
Output  | 7.1477e-05 | 0.00030868 | 0.00037852 |   0.0 |  0.23
Modify  | 0.024539   | 0.025712   | 0.027861   |   0.6 | 19.17
Other   |            | 0.0204     |            |       | 15.21

Nlocal:        2666.67 ave        2682 max        2637 min
Histogram: 1 1 0 0 1 0 3 1 2 3
Nghost:        2071.25 ave        2093 max        2059 min
Histogram: 2 0 5 2 1 0 0 0 1 1
Neighs:              0 ave           0 max           0 min
Histogram: 12 0 0 0 0 0 0 0 0 0

Total # of neighbors = 0
Ave neighs/atom = 0
Ave special neighs/atom = 1.98
Neighbor list builds = 25
Dangerous builds = 0


---------------------------------------------------------------------
      Device Time Info (average): 
---------------------------------------------------------------------
Data Transfer:   0.0080 s.
Neighbor copy:   0.0206 s.
Neighbor build:  0.0087 s.
Force calc:      0.0130 s.
Device Overhead: 0.0373 s.
Average split:   1.0000.
Lanes / atom:    4.
Vector width:    32.
Max Mem / Proc:  0.79 MB.
CPU Neighbor:    0.0057 s.
CPU Cast/Pack:   0.0034 s.
CPU Driver_Time: 0.0040 s.
CPU Idle_Time:   0.0093 s.
---------------------------------------------------------------------

Total wall time: 0:00:14
Intel(R) VTune(TM) Profiler 2022.2.0 collection completed successfully. Use the "aps --report /home/ubuntu/lammps/bench/aps_result_20220609" command to generate textual and HTML reports for the profiling session.
