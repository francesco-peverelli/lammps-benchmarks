LAMMPS (7 Jan 2022)
  using 1 OpenMP thread(s) per MPI task
New timer settings: style=full  mode=nosync  timeout=off
Lattice spacing in x,y,z = 1.6795962 1.6795962 1.6795962
Created orthogonal box = (0 0 0) to (100.77577 100.77577 100.77577)
  3 by 4 by 4 MPI processor grid
Created 864000 atoms
  using lattice units in orthogonal box = (0 0 0) to (100.77577 100.77577 100.77577)
  create_atoms CPU = 0.005 seconds

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE

Your simulation uses code contributions which should be cited:
- GPU package (short-range, long-range and three-body potentials):
The log file lists these citations in BibTeX format.

CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE-CITE


--------------------------------------------------------------------------
- Using acceleration for lj/cut:
-  with 8 proc(s) per device.
-  Horizontal vector operations: ENABLED
-  Shared memory system: No
--------------------------------------------------------------------------
Device 0: Tesla V100-SXM2-16GB, 80 CUs, 13/16 GB, 1.5 GHZ (Mixed Precision)
Device 1: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Mixed Precision)
Device 2: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Mixed Precision)
Device 3: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Mixed Precision)
Device 4: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Mixed Precision)
Device 5: Tesla V100-SXM2-16GB, 80 CUs, 1.5 GHZ (Mixed Precision)
--------------------------------------------------------------------------

Initializing Device and compiling on process 0...Done.
Initializing Devices 0-5 on core 0...Done.
Initializing Devices 0-5 on core 1...Done.
Initializing Devices 0-5 on core 2...Done.
Initializing Devices 0-5 on core 3...Done.
Initializing Devices 0-5 on core 4...Done.
Initializing Devices 0-5 on core 5...Done.
Initializing Devices 0-5 on core 6...Done.
Initializing Devices 0-5 on core 7...Done.

  generated 0 of 0 mixed pair_coeff terms from geometric mixing rule
Setting up Verlet run ...
  Unit style    : lj
  Current step  : 0
  Time step     : 0.005
Per MPI rank memory allocation (min/avg/max) = 5.181 | 5.181 | 5.181 Mbytes
Step Temp E_pair E_mol TotEng Press 
       0         1.44   -6.7733675            0     -4.61337   -5.0196713 
     100   0.75926563   -5.7611848            0   -4.6222876   0.19243147 
Loop time of 0.335836 on 48 procs for 100 steps with 864000 atoms

Performance: 128634.401 tau/day, 297.765 timesteps/s
90.0% CPU use with 48 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg|  %CPU | %total
-----------------------------------------------------------------------
Pair    | 0.078636   | 0.13227    | 0.18758    |   9.7 |  92.2 | 39.38
Neigh   | 8.102e-06  | 1.0453e-05 | 2.4944e-05 |   0.0 | 100.0 |  0.00
Comm    | 0.12161    | 0.17644    | 0.22996    |   8.4 |  88.1 | 52.54
Output  | 0.00023326 | 0.0015799  | 0.0027211  |   1.7 |  99.8 |  0.47
Modify  | 0.013571   | 0.014287   | 0.015462   |   0.3 |  91.8 |  4.25
Other   |            | 0.01125    |            |       |       |  3.35

Nlocal:          18000 ave       18124 max       17892 min
Histogram: 1 1 4 13 7 14 4 3 0 1
Nghost:        13973.8 ave       14094 max       13861 min
Histogram: 1 0 6 11 7 12 6 3 1 1
Neighs:              0 ave           0 max           0 min
Histogram: 48 0 0 0 0 0 0 0 0 0

Total # of neighbors = 0
Ave neighs/atom = 0
Neighbor list builds = 5
Dangerous builds not checked


---------------------------------------------------------------------
      Device Time Info (average): 
---------------------------------------------------------------------
Data Transfer:   0.0591 s.
Neighbor copy:   0.0003 s.
Neighbor build:  0.0049 s.
Force calc:      0.0513 s.
Device Overhead: 0.0870 s.
Average split:   1.0000.
Lanes / atom:    4.
Vector width:    32.
Max Mem / Proc:  15.34 MB.
CPU Neighbor:    0.0274 s.
CPU Cast/Pack:   0.0335 s.
CPU Driver_Time: 0.0021 s.
CPU Idle_Time:   0.0852 s.
---------------------------------------------------------------------

Total wall time: 0:00:28
Intel(R) VTune(TM) Profiler 2022.2.0 collection completed successfully. Use the "aps --report /home/ubuntu/lammps/bench/aps_result_20220420" command to generate textual and HTML reports for the profiling session.
